name: Deploy to GCP - DEV

on:
  push:
    branches:
      - develop

jobs:
  deploy-dev:
    name: Build & Deploy to DEV
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run tests (solo m√≥dulo API)
        run: mvn -pl api -am test

      - name: Build API (DEV)
        run: mvn -pl api -am clean package -DskipTests

      - name: GCP Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Docker auth GCP
        run: gcloud auth configure-docker southamerica-west1-docker.pkg.dev

      - name: Docker Build (Artifact Registry)
        run: docker build -t southamerica-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/iot-api/iot-api:dev ./api

      - name: Docker Push (Artifact Registry)
        run: docker push southamerica-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/iot-api/iot-api:dev

      - name: SSH deploy to DEV VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP_DEV }}
          username: ${{ secrets.GCP_VM_USER_DEV }}
          key: ${{ secrets.GCP_VM_SSH_KEY_DEV }}
          script: |
            cd ~
            if [ ! -d "iot-dev" ]; then
              git clone --branch develop https://github.com/JulioRom/api-iot.git iot-dev
            fi
            cd iot-dev
            git pull origin develop

            # Usamos docker-compose en vez de docker compose
            sudo docker compose -f docker-compose.dev.yml down || true
            sudo docker compose -f docker-compose.dev.yml pull
            sudo docker compose -f docker-compose.dev.yml up -d
      
