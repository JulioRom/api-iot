name: Deploy PROD

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run tests (solo módulo API)
        run: mvn -pl api -am test

      - name: Build API (PROD)
        run: mvn -pl api -am clean package -DskipTests

      - name: GCP Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Docker auth GCP
        run: gcloud auth configure-docker southamerica-west1-docker.pkg.dev

      - name: Docker Build (Artifact Registry)
        run: docker build -t southamerica-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/iot-api/iot-api:prod ./api

      - name: Docker Push (Artifact Registry)
        run: docker push southamerica-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/iot-api/iot-api:prod

      - name: SSH deploy to PROD VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP_PROD }}
          username: ${{ secrets.GCP_VM_USER_PROD }}
          key: ${{ secrets.GCP_VM_SSH_KEY_PROD }}
          script: |
            cd ~
            if [ ! -d "iot-prod" ]; then
              git clone --branch master https://github.com/JulioRom/api-iot.git iot-prod
            fi
            cd iot-prod
            git pull origin master

            # Usamos sudo para docker porque el grupo docker se aplica después del reboot
            sudo docker-compose -f docker-compose.prod.yml down || true
            sudo docker-compose -f docker-compose.prod.yml pull
            sudo docker-compose -f docker-compose.prod.yml up -d
